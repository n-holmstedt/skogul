{
  "receivers": {
    "test": {
      "type": "test",
      "values": 1,
      "metrics": 1,
      "handler": "conditional"
    }
  },
  "handlers": {
    "none": {
      "parser": "skogul",
      "transformers": [],
      "sender": "count"
    },
    "all": {
      "parser": "skogul",
      "transformers": [
        "interfaceexp_stats",
        "interface_stats",
        "interface_info",
        "optics_diag",
        "interfaces_interface",
        "flatten",
        "remove",
        "extract_names",
        "extract_measurement_name",
        "extract_measurement_name2",
        "flatten_systemId"
      ],
      "sender": "count"
    },
    "conditional": {
      "parser": "skogul",
      "transformers": [
        "conditional-transform"
      ],
      "sender": "count"
    },
    "accounting": {
      "parser": "skogul",
      "transformers": [],
      "sender": "debug"
   }
  },
  "senders": {
    "count": {
      "type": "counter",
      "next": "dupe",
      "stats": "accounting"
    },
    "dupe": {
      "type": "dupe",
      "next": [
        "batch"
      ]
    },
    "batch": {
      "type": "batch",
      "interval": "1s",
      "threshold": 1000,
      "next": "null"
    },
    "debug": {
      "type": "debug"
    },
    "null": {
      "type": "null"
    }
  },
  "transformers": {
    "conditional-transform": {
      "type": "switch",
      "cases": [
        {
          "when": "foo",
          "is": "bar",
          "transformers": [
            "interfaceexp_stats"
          ]
        },
        {
          "when": "foo",
          "is": "bar",
          "transformers": [
            "interface_stats"
          ]
        },
        {
          "when": "foo",
          "is": "bar",
          "transformers": [
            "interface_info"
          ]
        },
        {
          "when": "foo",
          "is": "bar",
          "transformers": [
            "optics_diag"
          ]
        },
        {
          "when": "foo",
          "is": "bar",
          "transformers": [
            "interfaces_interface"
          ]
        },
        {
          "when": "foo",
          "is": "bar",
          "transformers": [
            "flatten"
          ]
        },
        {
          "when": "foo",
          "is": "bar",
          "transformers": [
            "remove"
          ]
        },
        {
          "when": "foo",
          "is": "bar",
          "transformers": [
            "extract_names"
          ]
        },
        {
          "when": "foo",
          "is": "bar",
          "transformers": [
            "extract_measurement_name"
          ]
        },
        {
          "when": "foo",
          "is": "bar",
          "transformers": [
            "extract_measurement_name2"
          ]
        },
        {
          "when": "foo",
          "is": "bar",
          "transformers": [
            "flatten_systemId"
          ]
        }
      ]
    },
    "interfaceexp_stats": {
      "type": "split",
      "field": [
        "interfaceExp_stats"
      ]
    },
    "interfaces_interface": {
      "type": "split",
      "field": [
        "interface"
      ]
    },
    "interface_stats": {
      "type": "split",
      "field": [
        "interface_stats"
      ]
    },
    "interface_info": {
      "type": "split",
      "field": [
        "interface_info"
      ]
    },
    "optics_diag": {
      "type": "split",
      "field": [
        "Optics_diag"
      ]
    },
    "flatten": {
      "type": "data",
      "flatten": [
        [
          "aggregation",
          "state"
        ],
        [
          "egress_queue_info"
        ],
        [
          "egress_errors"
        ],
        [
          "egress_stats"
        ],
        [
          "ingress_errors"
        ],
        [
          "ingress_stats"
        ],
        [
          "egress_stats"
        ],
        [
          "ingress_stats"
        ],
        [
          "op_state"
        ],
        [
          "optics_diag_stats"
        ],
        [
          "optics_diag_stats__optics_lane_diag_stats"
        ]
      ]
    },
    "remove": {
      "type": "data",
      "remove": [
        "aggregation",
        "egress_queue_info",
        "egress_errors",
        "egress_stats",
        "ingress_errors",
        "ingress_stats",
        "egress_stats",
        "ingress_stats",
        "op_state",
        "optics_diag_stats",
        "optics_diag_stats__optics_lane_diag_stats"
      ]
    },
    "extract_names": {
      "type": "metadata",
      "extractFromData": [
        "if_name",
        "parent_ae_name",
        "name"
      ]
    },
    "extract_measurement_name": {
      "type": "replace",
      "regex": "^([^:]*):/([^:]*)/:.*$",
      "source": "sensorName",
      "destination": "measurement",
      "replacement": "$2"
    },
    "extract_measurement_name2": {
      "type": "replace",
      "regex": "[^a-zA-Z]",
      "source": "measurement",
      "replacement": "_"
    },
    "flatten_systemId": {
      "type": "replace",
      "regex": "-.*$",
      "source": "systemId"
    }
  }
}
